{
  "version": 3,
  "sources": ["../../node_modules/@material-ui/icons/Sync.js", "../../node_modules/@material-ui/icons/LiveHelp.js", "../src/index.tsx", "../src/components/UpdateDeviceConfig.tsx", "../src/components/TooltipIcon.tsx"],
  "sourcesContent": ["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Sync');\n\nexports.default = _default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 16h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 11.9 13 12.5 13 14h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"\n}), 'LiveHelp');\n\nexports.default = _default;", "import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// import { OnSettingsChangedCallback } from \"./pages/settings\";\nimport { SettingsApp } from \"iobroker-react/app\";\nimport { useSettings, useI18n } from \"iobroker-react/hooks\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { UpdateDeviceConfig } from \"./components/UpdateDeviceConfig\";\nimport { TooltipIcon } from \"./components/TooltipIcon\";\nimport type { Translations } from \"iobroker-react/i18n\";\nimport { useAPI } from \"./lib/useAPI\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexGrow: 1,\n\t\t\tflexFlow: \"column nowrap\",\n\t\t\tgap: theme.spacing(8),\n\t\t},\n\t\tkeyGrid: {\n\t\t\tdisplay: \"grid\",\n\t\t\tgridTemplateColumns: \"1fr auto\",\n\t\t\talignItems: \"center\",\n\t\t\tgap: theme.spacing(2),\n\t\t},\n\t\tkeyGridLabel: {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t\tgridColumn: \"1 / span 2\",\n\t\t},\n\t\tkeyGrid_TextField: {\n\t\t\tflexGrow: 1,\n\t\t\t// flexBasis: \"100%\",\n\t\t},\n\t\tkeyGrid_Button: {\n\t\t\tflexGrow: 0,\n\t\t},\n\t}),\n);\n\nconst networkKeyFields = [\n\t[\n\t\t2 /* SecurityClass.S2_AccessControl */,\n\t\t\"networkKey_S2_AccessControl\",\n\t\t\"S2 Access Control\",\n\t],\n\t[\n\t\t1 /* SecurityClass.S2_Authenticated */,\n\t\t\"networkKey_S2_Authenticated\",\n\t\t\"S2 Authenticated\",\n\t],\n\t[\n\t\t0 /* SecurityClass.S2_Unauthenticated */,\n\t\t\"networkKey_S2_Unauthenticated\",\n\t\t\"S2 Unauthenticated\",\n\t],\n\t[7 /* SecurityClass.S0_Legacy */, \"networkKey_S0\", \"S0 (Legacy)\"],\n] as const;\n\nconst SettingsPageContent: React.FC = React.memo(() => {\n\tconst { settings, originalSettings, setSettings } =\n\t\tuseSettings<ioBroker.AdapterConfig>();\n\tconst classes = useStyles();\n\tconst { translate: _, language } = useI18n();\n\tconst api = useAPI();\n\n\tconst handleChange = <T extends keyof ioBroker.AdapterConfig>(\n\t\toption: T,\n\t\tvalue: ioBroker.AdapterConfig[T],\n\t) => {\n\t\tsetSettings((s) => ({\n\t\t\t...s,\n\t\t\t[option]: value,\n\t\t}));\n\t};\n\n\tconst generateNetworkKey = (which: keyof ioBroker.AdapterConfig) => {\n\t\tif (\n\t\t\t!settings[which] ||\n\t\t\tsettings[which] !== originalSettings[which] ||\n\t\t\tconfirm(_(\"network key confirm\"))\n\t\t) {\n\t\t\tconst bytes = new Uint8Array(16);\n\t\t\twindow.crypto.getRandomValues(bytes);\n\t\t\tconst hexKey = [...bytes]\n\t\t\t\t.map((x) => x.toString(16).padStart(2, \"0\"))\n\t\t\t\t.join(\"\");\n\t\t\thandleChange(which, hexKey);\n\t\t}\n\t};\n\n\tconst validateNetworkKey = (which: keyof ioBroker.AdapterConfig) => {\n\t\tconst networkKey = settings[which] as string | undefined;\n\t\tif (!networkKey) return;\n\t\tif (!/[0-9a-fA-F]{32}/.test(networkKey)) {\n\t\t\talert(_(\"Invalid network key\"));\n\t\t\t// reset\n\t\t\thandleChange(which, originalSettings[which]);\n\t\t}\n\t};\n\n\tconst handleNetworkKeyPaste = (\n\t\twhich: keyof ioBroker.AdapterConfig,\n\t\te: React.ClipboardEvent<HTMLTextAreaElement | HTMLInputElement>,\n\t) => {\n\t\t// Stop data actually being pasted\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\n\t\t// Get pasted data via clipboard API\n\t\t// @ts-expect-error browser compatibility\n\t\tconst clipboardData = e.clipboardData || window.clipboardData;\n\t\tlet pastedData: string = clipboardData.getData(\"Text\");\n\n\t\tif (pastedData) {\n\t\t\t// clean up any unwanted fragents\n\t\t\tpastedData = pastedData\n\t\t\t\t.trim()\n\t\t\t\t.replace(/0x/g, \"\")\n\t\t\t\t.replace(/[^0-9a-fA-F]+/g, \"\")\n\t\t\t\t.toLowerCase()\n\t\t\t\t.slice(0, 32);\n\t\t}\n\t\thandleChange(which, pastedData);\n\t};\n\n\tconst [serialPorts, setSerialPorts] = React.useState<string[]>([]);\n\tReact.useEffect(() => {\n\t\tapi.listSerialPorts()\n\t\t\t.then((ports) => {\n\t\t\t\tif (ports.length) {\n\t\t\t\t\tsetSerialPorts(ports);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(`Cannot retrieve serial ports: ${e}`);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Grid container spacing={8}>\n\t\t\t\t<Grid container item xs={12} sm spacing={2} direction=\"column\">\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={serialPorts}\n\t\t\t\t\t\t\tfreeSolo={true}\n\t\t\t\t\t\t\tforcePopupIcon={true}\n\t\t\t\t\t\t\tnoOptionsText=\"\"\n\t\t\t\t\t\t\tautoSelect={true}\n\t\t\t\t\t\t\tclearOnBlur={true}\n\t\t\t\t\t\t\tonChange={(event, value) =>\n\t\t\t\t\t\t\t\thandleChange(\"serialport\", value ?? \"\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenderInput={(props) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\tlabel={_(\"Select serial port\")}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tvalue={settings.serialport}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{_(\"hosted port tip\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tlabel={_(\n\t\t\t\t\t\t\t\t\"Disable restarting the controller on startup\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={settings.disableSoftReset}\n\t\t\t\t\t\t\t\t\tonChange={(event, checked) =>\n\t\t\t\t\t\t\t\t\t\thandleChange(\n\t\t\t\t\t\t\t\t\t\t\t\"disableSoftReset\",\n\t\t\t\t\t\t\t\t\t\t\tchecked,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{_(\n\t\t\t\t\t\t\t\t\"You can try this if the adapter does not start after updating to 2.3 or higher.\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\tlanguage === \"de\"\n\t\t\t\t\t\t\t\t\t\t? \"https://github.com/AlCalzone/ioBroker.zwave2/blob/master/docs/de/bei-problemen.md#der-adapter-startet-nach-update-auf-version-23-oder-h\u00F6her-nicht\"\n\t\t\t\t\t\t\t\t\t\t: \"https://github.com/AlCalzone/ioBroker.zwave2/blob/master/docs/en/troubleshooting.md#the-adapter-does-not-start-after-updating-to-version-23-or-higher\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{_(\"But read this first!\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tlabel={_(\"Write a detailed logfile\")}\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={settings.writeLogFile}\n\t\t\t\t\t\t\t\t\tonChange={(event, checked) =>\n\t\t\t\t\t\t\t\t\t\thandleChange(\"writeLogFile\", checked)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{_(\n\t\t\t\t\t\t\t\t\"This should only be set for debugging purposes.\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tlabel={_(\"Preserve state names\")}\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={settings.preserveStateNames}\n\t\t\t\t\t\t\t\t\tonChange={(event, checked) =>\n\t\t\t\t\t\t\t\t\t\thandleChange(\n\t\t\t\t\t\t\t\t\t\t\t\"preserveStateNames\",\n\t\t\t\t\t\t\t\t\t\t\tchecked,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{_(\"Legacy switch compatibility\")}{\" \"}\n\t\t\t\t\t\t\t\t\t<TooltipIcon\n\t\t\t\t\t\t\t\t\t\ttooltip={_(\"switch compat tooltip\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={settings.switchCompat}\n\t\t\t\t\t\t\t\t\tonChange={(event, checked) =>\n\t\t\t\t\t\t\t\t\t\thandleChange(\"switchCompat\", checked)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} sm={7} className={classes.keyGrid}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\tclassName={classes.keyGridLabel}\n\t\t\t\t\t>\n\t\t\t\t\t\t{_(\"Network keys for secure communication\")}\n\t\t\t\t\t\t<TooltipIcon tooltip={_(\"network key tooltip\")} />\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t{networkKeyFields.map(\n\t\t\t\t\t\t([securityClass, property, label]) => (\n\t\t\t\t\t\t\t<React.Fragment\n\t\t\t\t\t\t\t\tkey={`security-class-${securityClass}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tclassName={classes.keyGrid_TextField}\n\t\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tmaxLength: 32,\n\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"monospace\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonPaste: handleNetworkKeyPaste.bind(\n\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t// Avoid overlapping the text if it was filled out\n\t\t\t\t\t\t\t\t\t\tshrink: !!settings[property],\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue={settings[property]}\n\t\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\t\thandleChange(\n\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t\tevent.target.value,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonBlur={() => validateNetworkKey(property)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.keyGrid_Button}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SyncIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => generateNetworkKey(property)}\n\t\t\t\t\t\t\t\t\tstyle={{ whiteSpace: \"nowrap\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{_(\"Generate key\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t),\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\n\t\t\t<UpdateDeviceConfig />\n\t\t</div>\n\t);\n});\n\nconst migrateSettings = (settings: ioBroker.AdapterConfig) => {\n\tif (settings.networkKey) {\n\t\tsettings.networkKey_S0 = settings.networkKey;\n\t\tdelete settings.networkKey;\n\t}\n};\n\nconst translations: Translations = {\n\ten: require(\"./i18n/en.json\"),\n\tde: require(\"./i18n/de.json\"),\n\tru: require(\"./i18n/ru.json\"),\n\tpt: require(\"./i18n/pt.json\"),\n\tnl: require(\"./i18n/nl.json\"),\n\tfr: require(\"./i18n/fr.json\"),\n\tit: require(\"./i18n/it.json\"),\n\tes: require(\"./i18n/es.json\"),\n\tpl: require(\"./i18n/pl.json\"),\n\t\"zh-cn\": require(\"./i18n/zh-cn.json\"),\n};\n\nconst Root: React.FC = () => {\n\treturn (\n\t\t<SettingsApp\n\t\t\tname=\"zwave2\"\n\t\t\tafterLoad={migrateSettings}\n\t\t\ttranslations={translations}\n\t\t>\n\t\t\t<SettingsPageContent />\n\t\t</SettingsApp>\n\t);\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n", "import React from \"react\";\nimport {\n\tuseIoBrokerState,\n\tuseAdapter,\n\tuseGlobals,\n\tuseI18n,\n} from \"iobroker-react/hooks\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useAPI } from \"../lib/useAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n\tbutton: {\n\t\tmargin: theme.spacing(1, 0),\n\t},\n}));\n\nexport const UpdateDeviceConfig: React.FC = () => {\n\tconst { alive: adapterRunning, connected: driverReady } = useAdapter();\n\tconst { translate: _ } = useI18n();\n\tconst classes = useStyles();\n\n\tconst { namespace } = useGlobals();\n\tconst api = useAPI();\n\n\tconst [configUpdate] = useIoBrokerState<string>({\n\t\tid: `${namespace}.info.configUpdate`,\n\t});\n\tconst [configVersion] = useIoBrokerState<string>({\n\t\tid: `${namespace}.info.configVersion`,\n\t});\n\tconst [configUpdating] = useIoBrokerState<string>({\n\t\tid: `${namespace}.info.configUpdating`,\n\t});\n\tconst [busy, setBusy] = React.useState(false);\n\n\tasync function update(): Promise<void> {\n\t\tsetBusy(true);\n\t\tconst result = await api.updateConfig();\n\t\tsetBusy(false);\n\t\tif (!result) alert(_(\"Updating the configuration DB failed!\"));\n\t}\n\n\tif (!adapterRunning || !driverReady) return <></>;\n\tif (!configUpdate) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t{_(\"Configuration DB is up to date\")}\n\t\t\t\t\t<br />\n\t\t\t\t\t{_(\"Installed version\")}: {configVersion}\n\t\t\t\t</Typography>\n\t\t\t</>\n\t\t);\n\t} else if (busy || configUpdating) {\n\t\treturn (\n\t\t\t<Typography variant=\"body2\">\n\t\t\t\t{_(\"Updating configuration DB - please wait...\")}\n\t\t\t</Typography>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t\t{_(\"Update for configuration DB available\")}: {configUpdate}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t\t{_(\"Installed version\")}: {configVersion}\n\t\t\t</Typography>\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => update()}\n\t\t\t\tstartIcon={<GetAppIcon />}\n\t\t\t>\n\t\t\t\t{_(\"Update configuration DB\")}\n\t\t\t</Button>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t\t{_(\"config update disclaimer\")}\n\t\t\t</Typography>\n\t\t</div>\n\t);\n};\n", "import Tooltip from \"@material-ui/core/Tooltip\";\nimport React from \"react\";\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n\ttooltip: {\n\t\tverticalAlign: \"middle\",\n\t},\n\ticon: {\n\t\tcolor: theme.palette.text.hint,\n\t\tcursor: \"help\",\n\t},\n}));\n\nexport interface TooltipIconProps {\n\ttooltip: string;\n}\n\nexport const TooltipIcon: React.FC<TooltipIconProps> = (props) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Tooltip title={props.tooltip} className={classes.tooltip}>\n\t\t\t<LiveHelpIcon className={classes.icon} />\n\t\t</Tooltip>\n\t);\n};\n"],
  "mappings": "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",
  "names": []
}
